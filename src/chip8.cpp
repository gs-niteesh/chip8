#include <iostream>
#include <iomanip>
#include <ctime>
#include <string>
#include <SDL2/SDL.h>
#include "chip8.h"
#include "utils.h"

static constexpr std::array<uint8_t, 80> fonts =
{
  0xF0, 0x90, 0x90, 0x90, 0xF0, /* 0 */
  0x20, 0x60, 0x20, 0x20, 0x70, /* 1 */
  0xF0, 0x10, 0xF0, 0x80, 0xF0, /* 2 */
  0xF0, 0x10, 0xF0, 0x10, 0xF0, /* 3 */
  0x90, 0x90, 0xF0, 0x10, 0x10, /* 4 */
  0xF0, 0x80, 0xF0, 0x10, 0xF0, /* 5 */
  0xF0, 0x80, 0xF0, 0x90, 0xF0, /* 6 */
  0xF0, 0x10, 0x20, 0x40, 0x40, /* 7 */
  0xF0, 0x90, 0xF0, 0x90, 0xF0, /* 8 */
  0xF0, 0x90, 0xF0, 0x10, 0xF0, /* 9 */
  0xF0, 0x90, 0xF0, 0x90, 0x90, /* A */
  0xE0, 0x90, 0xE0, 0x90, 0xE0, /* B */
  0xF0, 0x80, 0x80, 0x80, 0xF0, /* C */
  0xE0, 0x90, 0x90, 0x90, 0xE0, /* D */
  0xF0, 0x80, 0xF0, 0x80, 0xF0, /* E */
  0xF0, 0x80, 0xF0, 0x80, 0x80  /* F */
};

Chip8::Chip8() : pc(0x200), sp(0), reg_i(0), delay_timer(0),
                 sound_timer(0), keys({}), random_generator(time(nullptr))
{
  std::copy(fonts.begin(), fonts.end(), memory.begin() + FONT_START);
  std::fill(video_memory.begin(), video_memory.end(), 0);
  std::fill(stack.begin(), stack.end(), 0);
}

Chip8::Chip8(const std::vector<uint8_t> &mem) : Chip8()
{
  std::copy(mem.begin(), mem.end(), memory.begin() + ROM_START);
}

void Chip8::step() {
}
